{
	"info": {
		"_postman_id": "f269d96f-3863-45db-82ed-6ba0d3ecd678",
		"name": "Back-end Challenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4246747"
	},
	"item": [
		{
			"name": "Customers",
			"item": [
				{
					"name": "Customers: Listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data);\r",
									"    pm.environment.set(\"customer_id\", jsonData.data[0].id);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "per_page",
								"value": "2",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{api_route}}/customers",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"customers"
							],
							"query": [
								{
									"key": "per_page",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers: Show",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id);\r",
									"    pm.environment.set(\"customer_id\", jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_route}}/customers/{{customer_id}}",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"customers",
								"{{customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers: Create",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomNumber\", _.random (20,10000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id);\r",
									"    pm.environment.set(\"customer_id\", jsonData.id);\r",
									"    console.log('Variavel customer_id atualizada - ', postman.getEnvironmentVariable(\"customer_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"birthdate\": \"1983-09-06\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\",\r\n    \"address\": \"{{$randomStreetAddress}}\",\r\n    \"complement\": \"{{$randomWord}}\",\r\n    \"neighborhood\": \"{{$randomWord}}\",\r\n    \"zipcode\": \"{{$randomInt}}{{$randomInt}}{{$randomInt}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_route}}/customers",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers: Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id);\r",
									"    pm.environment.set(\"customer_id\", jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"// pm.globals.set('randomNumber', Math.floor(Math.random() * 5));\r",
									"pm.collectionVariables.set (\"randomNumber\", _.random (20,10000));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"birthdate\": \"1980-09-06\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\",\r\n    \"address\": \"{{$randomStreetAddress}}\",\r\n    \"complement\": \"{{$randomWord}}\",\r\n    \"neighborhood\": \"{{$randomWord}}\",\r\n    \"zipcode\": \"{{$randomInt}}{{$randomInt}}{{$randomInt}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_route}}/customers/{{customer_id}}",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"customers",
								"{{customer_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customers: Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api_route}}/customers/{{customer_id}}",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"customers",
								"{{customer_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Products: Listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data);\r",
									"    pm.environment.set(\"product_id\", jsonData.data[0].id);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_route}}/products",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products: Show",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id);\r",
									"    pm.environment.set(\"product_id\", jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_route}}/products/{{product_id}}",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products: Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id);\r",
									"    pm.environment.set(\"product_id\", jsonData.id);\r",
									"    console.log('Variavel product_id atualizada - ', postman.getEnvironmentVariable(\"product_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomJobTitle}}\",\r\n    \"price\": \"{{$randomPrice}}\",\r\n    \"photo\": \"{{$randomAvatarImage}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_route}}/products",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products: Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id);\r",
									"    pm.environment.set(\"product_id\", jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomJobTitle}}\",\r\n    \"price\": \"{{$randomPrice}}\",\r\n    \"photo\": \"{{$randomImageUrl}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_route}}/products/{{product_id}}",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Products: Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api_route}}/products/{{product_id}}",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Orders: Listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data);\r",
									"    pm.environment.set(\"order_id\", jsonData.data[0].id);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_route}}/orders",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orders: Show",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id);\r",
									"    pm.environment.set(\"order_id\", jsonData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api_route}}/orders/{{order_id}}",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"orders",
								"{{order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orders: Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response Json\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id);\r",
									"    pm.environment.set(\"order_id\", jsonData.id);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"_customer_id\", 58);\r",
									"pm.collectionVariables.set(\"_product_id\", 17);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"customer_id\": {{_customer_id}},\r\n    \"product_id\": {{_product_id}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_route}}/orders",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orders: Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api_route}}/orders/{{order_id}}",
							"host": [
								"{{api_route}}"
							],
							"path": [
								"orders",
								"{{order_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "randomNum",
			"value": ""
		},
		{
			"key": "randomNumber",
			"value": ""
		},
		{
			"key": "birthdate",
			"value": ""
		},
		{
			"key": "year",
			"value": ""
		},
		{
			"key": "month",
			"value": ""
		},
		{
			"key": "day",
			"value": ""
		},
		{
			"key": "customer_id",
			"value": ""
		},
		{
			"key": "_customer_id",
			"value": ""
		},
		{
			"key": "_product_id",
			"value": ""
		}
	]
}